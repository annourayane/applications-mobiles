{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { UsernameContext, TokenContext } from \"../Context/Context\";\nimport Input from \"../components/UI/Input\";\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { styles } from \"../styles/styletodolist\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://graphql.unicaen.fr:4000';\nvar GET_TODOLISTS_QUERY = `\nquery TodoLists($where: TodoListWhere) {\n  todoLists(where: $where) {\n    id\n    title\n    owner {\n      username\n    }\n  }\n}\n`;\nvar GET_TODOS_FOR_TODOLIST_QUERY = `\nquery Todos($where: TodoWhere) {\n  todos(where: $where) {\n    id\n    content\n    done\n    belongsTo {\n      title\n    }\n  }\n}\n`;\nvar DELETE_TODOLIST_MUTATION = `\nmutation DeleteTodoLists($where: TodoListWhere) {\n  deleteTodoLists(where: $where) {\n    nodesDeleted\n  }\n}\n`;\nvar CREATE_TODOLIST_MUTATION = `\nmutation createTodoLists($input: [TodoListCreateInput!]!) {\n  createTodoLists(input: $input) {\n    todoLists {\n      id\n      owner {\n        username\n      }\n      title\n    }\n  }\n}\n`;\nexport default function TodoListsScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    todoLists = _useState2[0],\n    setTodoLists = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errorMessage = _useState4[0],\n    setErrorMessage = _useState4[1];\n  var _useContext = useContext(UsernameContext),\n    _useContext2 = _slicedToArray(_useContext, 1),\n    username = _useContext2[0];\n  var _useContext3 = useContext(TokenContext),\n    _useContext4 = _slicedToArray(_useContext3, 1),\n    token = _useContext4[0];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newTodoListTitle = _useState6[0],\n    setNewTodoListTitle = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    totalTasks = _useState10[0],\n    setTotalTasks = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    completedTasks = _useState12[0],\n    setCompletedTasks = _useState12[1];\n  var navigation = useNavigation();\n  var fetchTodoLists = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var response = yield fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            query: GET_TODOLISTS_QUERY,\n            variables: {\n              where: {\n                owner: {\n                  username: username\n                }\n              }\n            }\n          })\n        });\n        var jsonResponse = yield response.json();\n        if (jsonResponse.errors) throw new Error(jsonResponse.errors[0].message);\n        var fetchedTodoLists = jsonResponse.data.todoLists || [];\n        setTodoLists(fetchedTodoLists);\n        var totalTodos = 0;\n        var doneTodos = 0;\n        for (var list of fetchedTodoLists) {\n          var todos = yield fetchTodosForTodoList(list.id);\n          totalTodos += todos.length;\n          doneTodos += todos.filter(function (todo) {\n            return todo.done;\n          }).length;\n        }\n        setTotalTasks(totalTodos);\n        setCompletedTasks(doneTodos);\n        setLoading(false);\n      } catch (error) {\n        setErrorMessage(error.message);\n        setLoading(false);\n      }\n    });\n    return function fetchTodoLists() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchTodosForTodoList = function () {\n    var _ref2 = _asyncToGenerator(function* (todoListId) {\n      try {\n        var response = yield fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            query: GET_TODOS_FOR_TODOLIST_QUERY,\n            variables: {\n              where: {\n                belongsTo: {\n                  id: todoListId\n                }\n              }\n            }\n          })\n        });\n        var jsonResponse = yield response.json();\n        if (jsonResponse.errors) throw new Error(jsonResponse.errors[0].message);\n        return jsonResponse.data.todos || [];\n      } catch (error) {\n        setErrorMessage(error.message);\n        return [];\n      }\n    });\n    return function fetchTodosForTodoList(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var deleteTodoList = function () {\n    var _ref3 = _asyncToGenerator(function* (todoListId) {\n      try {\n        var response = yield fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            query: DELETE_TODOLIST_MUTATION,\n            variables: {\n              where: {\n                id: todoListId\n              }\n            }\n          })\n        });\n        var jsonResponse = yield response.json();\n        if (jsonResponse.errors) {\n          throw new Error(jsonResponse.errors[0].message);\n        }\n        fetchTodoLists();\n      } catch (error) {\n        setErrorMessage(error.message);\n      }\n    });\n    return function deleteTodoList(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var createTodoList = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var trimmedTitle = newTodoListTitle.trim();\n      if (trimmedTitle === '') {\n        setErrorMessage('Le titre de la TodoList ne peut pas Ãªtre vide.');\n        return;\n      }\n      try {\n        var response = yield fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            query: CREATE_TODOLIST_MUTATION,\n            variables: {\n              input: [{\n                title: trimmedTitle,\n                owner: {\n                  connect: {\n                    where: {\n                      username: username\n                    }\n                  }\n                }\n              }]\n            }\n          })\n        });\n        var jsonResponse = yield response.json();\n        if (jsonResponse.errors) {\n          throw new Error(jsonResponse.errors[0].message);\n        }\n        setNewTodoListTitle('');\n        fetchTodoLists();\n      } catch (error) {\n        setErrorMessage(error.message);\n      }\n    });\n    return function createTodoList() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (username) fetchTodoLists();\n  }, [username]);\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/todoooo.png\"),\n    style: styles.backgroundImage,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Todo Lists\"\n      }), _jsx(View, {\n        style: styles.progressContainer,\n        children: _jsxs(Text, {\n          style: styles.progressText,\n          children: [\"votre progression :\", completedTasks, \" taches realisees sur \", totalTasks]\n        })\n      }), _jsx(View, {\n        style: styles.progressBarContainer,\n        children: _jsx(View, {\n          style: [styles.progressBarFill, {\n            width: `${totalTasks === 0 ? 0 : completedTasks / totalTasks * 100}%`\n          }]\n        })\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsx(Input, {\n          style: {\n            fontSize: 70,\n            borderWidth: 1,\n            borderColor: 'black'\n          },\n          placeholder: \"Ajouter une nouvelle Todo List\",\n          onSubmit: function onSubmit(value) {\n            setNewTodoListTitle(value);\n            createTodoList();\n          },\n          value: newTodoListTitle,\n          onChangeText: function onChangeText(text) {\n            setNewTodoListTitle(text);\n            setErrorMessage('');\n          },\n          icon: _jsx(Icon, {\n            name: \"plus\",\n            size: 20,\n            color: \"#fff\"\n          })\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsxs(TouchableOpacity, {\n          style: styles.button,\n          onPress: createTodoList,\n          children: [_jsx(Icon, {\n            name: \"plus\",\n            size: 20,\n            color: \"#fff\"\n          }), _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Ajouter\"\n          })]\n        })\n      }), errorMessage ? _jsx(Text, {\n        style: styles.error,\n        children: errorMessage\n      }) : null, loading ? _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0000ff\"\n      }) : _jsx(FlatList, {\n        data: todoLists,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref5) {\n          var item = _ref5.item;\n          return _jsxs(View, {\n            style: styles.todoItem,\n            children: [_jsxs(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigation.navigate('Details', {\n                  todoListId: item.id,\n                  title: item.title\n                });\n              },\n              style: styles.todoListCard,\n              children: [_jsx(Text, {\n                style: styles.listTitle,\n                children: item.title\n              }), _jsx(Text, {\n                style: styles.ownerText,\n                children: item.owner.username\n              })]\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return deleteTodoList(item.id);\n              },\n              children: _jsx(Image, {\n                source: require(\"../assets/poubelle.png\"),\n                style: styles.icon\n              })\n            })]\n          });\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","useContext","View","Text","FlatList","StyleSheet","ImageBackground","TouchableOpacity","Image","ActivityIndicator","UsernameContext","TokenContext","Input","useNavigation","Icon","styles","jsx","_jsx","jsxs","_jsxs","API_URL","GET_TODOLISTS_QUERY","GET_TODOS_FOR_TODOLIST_QUERY","DELETE_TODOLIST_MUTATION","CREATE_TODOLIST_MUTATION","TodoListsScreen","_useState","_useState2","_slicedToArray","todoLists","setTodoLists","_useState3","_useState4","errorMessage","setErrorMessage","_useContext","_useContext2","username","_useContext3","_useContext4","token","_useState5","_useState6","newTodoListTitle","setNewTodoListTitle","_useState7","_useState8","loading","setLoading","_useState9","_useState10","totalTasks","setTotalTasks","_useState11","_useState12","completedTasks","setCompletedTasks","navigation","fetchTodoLists","_ref","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","query","variables","where","owner","jsonResponse","json","errors","Error","message","fetchedTodoLists","data","totalTodos","doneTodos","list","todos","fetchTodosForTodoList","id","length","filter","todo","done","error","apply","arguments","_ref2","todoListId","belongsTo","_x","deleteTodoList","_ref3","_x2","createTodoList","_ref4","trimmedTitle","trim","input","title","connect","source","require","style","backgroundImage","children","container","progressContainer","progressText","progressBarContainer","progressBarFill","width","fontSize","borderWidth","borderColor","placeholder","onSubmit","value","onChangeText","text","icon","name","size","color","buttonContainer","button","onPress","buttonText","keyExtractor","item","toString","renderItem","_ref5","todoItem","navigate","todoListCard","listTitle","ownerText"],"sources":["/home/annou231/Documents/Licence 3/github/react/applications-mobiles/react/Screen/TodoListsScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { View, Text, FlatList, StyleSheet, ImageBackground, TouchableOpacity, Image, ActivityIndicator } from 'react-native';\nimport { UsernameContext, TokenContext } from '../Context/Context';\nimport Input from '../components/UI/Input';\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { styles } from '../styles/styletodolist'; \n\nconst API_URL = 'http://graphql.unicaen.fr:4000';\n  //gestion des todolistes \n// requete GraphQL\nconst GET_TODOLISTS_QUERY = `\nquery TodoLists($where: TodoListWhere) {\n  todoLists(where: $where) {\n    id\n    title\n    owner {\n      username\n    }\n  }\n}\n`;\n\nconst GET_TODOS_FOR_TODOLIST_QUERY = `\nquery Todos($where: TodoWhere) {\n  todos(where: $where) {\n    id\n    content\n    done\n    belongsTo {\n      title\n    }\n  }\n}\n`;\n\nconst DELETE_TODOLIST_MUTATION = `\nmutation DeleteTodoLists($where: TodoListWhere) {\n  deleteTodoLists(where: $where) {\n    nodesDeleted\n  }\n}\n`;\n\nconst CREATE_TODOLIST_MUTATION = `\nmutation createTodoLists($input: [TodoListCreateInput!]!) {\n  createTodoLists(input: $input) {\n    todoLists {\n      id\n      owner {\n        username\n      }\n      title\n    }\n  }\n}\n`;\n\nexport default function TodoListsScreen() {\n  const [todoLists, setTodoLists] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [username] = useContext(UsernameContext);\n  const [token] = useContext(TokenContext);\n  const [newTodoListTitle, setNewTodoListTitle] = useState('');\n  const [loading, setLoading] = useState(true); // etat de chargement\n  const [totalTasks, setTotalTasks] = useState(0); // Nombre total de taches\n  const [completedTasks, setCompletedTasks] = useState(0); // Nombre de taches terminees\n  const navigation = useNavigation();\n\n  // Fonction pour recuperer toutes les TodoLists du user \n  const fetchTodoLists = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json', //inidique le format des donnees envoyes \n          'Authorization': `Bearer ${token}`, //securiser la requete \n        },\n        body: JSON.stringify({\n          query: GET_TODOLISTS_QUERY,\n          variables: { where: { owner: { username } } }, //critere de la requete \n        }),\n      });\n\n      const jsonResponse = await response.json(); //parser la reponse \n      if (jsonResponse.errors) throw new Error(jsonResponse.errors[0].message);\n\n      const fetchedTodoLists = jsonResponse.data.todoLists || [];\n      setTodoLists(fetchedTodoLists); //mettre a jour les todolist\n\n      // Recuperer les todos pour chaque TodoList\n      let totalTodos = 0;\n      let doneTodos = 0;\n\n      for (const list of fetchedTodoLists) {\n        const todos = await fetchTodosForTodoList(list.id);\n        totalTodos += todos.length;\n        doneTodos += todos.filter(todo => todo.done).length;\n      }\n\n      setTotalTasks(totalTodos);\n      setCompletedTasks(doneTodos);\n      setLoading(false);\n    } catch (error) {\n      setErrorMessage(error.message);\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour recuperer les Todos d'une TodoList\n  const fetchTodosForTodoList = async (todoListId) => {\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          query: GET_TODOS_FOR_TODOLIST_QUERY,\n          variables: { where: { belongsTo: { id: todoListId } } },\n        }),\n      });\n\n      const jsonResponse = await response.json();\n      if (jsonResponse.errors) throw new Error(jsonResponse.errors[0].message);\n\n      return jsonResponse.data.todos || [];\n    } catch (error) {\n      setErrorMessage(error.message);\n      return [];\n    }\n  };\n\n  // fonction pour supprimer une todolist \n  const deleteTodoList = async (todoListId) => {\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          query: DELETE_TODOLIST_MUTATION,\n          variables: {\n            where: {\n              id: todoListId,\n            },\n          },\n        }),\n      });\n\n      const jsonResponse = await response.json();\n      if (jsonResponse.errors) {\n        throw new Error(jsonResponse.errors[0].message);\n      }\n\n      // Reactualiser la liste des TodoLists aprÃ¨s la suppression\n      fetchTodoLists();\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n\n  // Fonction pour creer une nouvelle TodoList\n  const createTodoList = async () => {\n    const trimmedTitle = newTodoListTitle.trim();\n\n    if (trimmedTitle === '') {\n      setErrorMessage('Le titre de la TodoList ne peut pas Ãªtre vide.');\n      return;\n    }\n\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          query: CREATE_TODOLIST_MUTATION,\n          variables: {\n            input: [\n              {\n                title: trimmedTitle,\n                owner: {\n                  connect: { where: { username } },\n                },\n              },\n            ],\n          },\n        }),\n      });\n\n      const jsonResponse = await response.json();\n      if (jsonResponse.errors) {\n        throw new Error(jsonResponse.errors[0].message);\n      }\n\n      setNewTodoListTitle('');\n      fetchTodoLists(); // Reactualiser la liste des TodoLists aprÃ¨s la creation\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n\n  useEffect(() => { //mise  a jour des donnees \n    if (username) fetchTodoLists(); /**permet de recuperer les todolistes desque \n                                         le username change (il surveille le changement de username ) */\n  }, [username]);\n\n  return (\n    <ImageBackground \n        source ={require('../assets/todoooo.png')} \n        style={styles.backgroundImage}\n        >\n    <  View style={styles.container}>\n        <Text style={styles.title}>Todo Lists</Text>\n  \n        {/* Affichage du nombre de taches realisees / total */}\n        <View style={styles.progressContainer}>\n          <Text style={styles.progressText}>votre progression : \n            {completedTasks} taches realisees sur {totalTasks}\n          </Text>\n        </View>\n        <View style={styles.progressBarContainer}>\n        <View\n        style={[\n          styles.progressBarFill,\n          { width: `${totalTasks === 0 ? 0 : (completedTasks / totalTasks) * 100}%` },\n        ]}\n        />\n        \n        </View>\n\n       \n        <View style= {styles.input}>\n         \n          <Input  //appel du composant Input.js\n            style={{ fontSize: 70, borderWidth: 1, borderColor: 'black' }}\n            placeholder=\"Ajouter une nouvelle Todo List\"\n            onSubmit={(value) => {   //titre de la nouvelle todolist\n              setNewTodoListTitle(value);\n              createTodoList();\n            }}\n            value={newTodoListTitle}\n            onChangeText={(text) => {\n              setNewTodoListTitle(text); //met a jour lors de l'ecriture \n              setErrorMessage('');\n            }}\n            icon={<Icon name=\"plus\" size={20} color=\"#fff\" />}\n            //style={styles.input}\n          />\n        </View> \n\n        <View style={styles.buttonContainer}>\n\n          <TouchableOpacity style={styles.button} onPress={createTodoList}> \n            <Icon name=\"plus\" size={20} color=\"#fff\" />\n            <Text style={styles.buttonText}>Ajouter</Text>\n          </TouchableOpacity>\n        </View>\n  \n        {errorMessage ? <Text style={styles.error}>{errorMessage}</Text> : null}\n  \n        {loading ? (\n          <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n         ) : (\n           <FlatList\n             data={todoLists}\n             keyExtractor={(item) => item.id.toString()}\n             renderItem={({ item }) => ( //fonction qui definit le rendu de chaque element \n               <View style={styles.todoItem}>\n                 <TouchableOpacity\n                   onPress={() => //en appuiyant sur une todolist\n                     navigation.navigate('Details', { todoListId: item.id, title: item.title })\n                   }\n                   style={styles.todoListCard}\n                 >\n                   <Text style={styles.listTitle}>{item.title}</Text>\n                   <Text style={styles.ownerText}>{item.owner.username}</Text>\n   \n                 </TouchableOpacity>\n                 <TouchableOpacity onPress={() => deleteTodoList(item.id)}>\n                   <Image source={require('../assets/poubelle.png')} style={styles.icon} />\n                 </TouchableOpacity>\n               </View>\n             )}\n           />\n         )}\n       </View>\n    </ImageBackground>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}