{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport { signIn } from \"../js/sign\";\nimport { styles } from \"../styles/styleSignIn\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(UsernameContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    setUsername = _useContext2[1];\n  var _useContext3 = useContext(TokenContext),\n    _useContext4 = _slicedToArray(_useContext3, 2),\n    setToken = _useContext4[1];\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputUsername = _useState2[0],\n    setInputUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    errorMessage = _useState6[0],\n    setErrorMessage = _useState6[1];\n  var handleSignIn = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var token = yield signIn(inputUsername, password);\n        setUsername(inputUsername);\n        setToken(token);\n        navigation.navigate('Home');\n      } catch (error) {\n        setErrorMessage(error.message);\n      }\n    });\n    return function handleSignIn() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/bleu.png\"),\n    style: styles.backgroundImage,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Sign In\"\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Username\",\n          value: inputUsername,\n          onChangeText: setInputUsername\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          value: password,\n          onChangeText: setPassword,\n          secureTextEntry: true\n        })]\n      }), errorMessage ? _jsx(Text, {\n        style: styles.error,\n        children: errorMessage\n      }) : null, \" \", _jsx(TouchableOpacity, {\n        style: styles.signInButton,\n        onPress: handleSignIn,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Sign In\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('SignUp');\n        },\n        children: _jsx(Text, {\n          style: styles.signUpText,\n          children: \"Don't have an account? Sign Up\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useContext","View","Text","TextInput","Button","StyleSheet","TouchableOpacity","ImageBackground","TokenContext","UsernameContext","signIn","styles","jsx","_jsx","jsxs","_jsxs","SignInScreen","_ref","navigation","_useContext","_useContext2","_slicedToArray","setUsername","_useContext3","_useContext4","setToken","_useState","_useState2","inputUsername","setInputUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","errorMessage","setErrorMessage","handleSignIn","_ref2","_asyncToGenerator","token","navigate","error","message","apply","arguments","source","require","style","backgroundImage","children","container","title","inputContainer","input","placeholder","value","onChangeText","secureTextEntry","signInButton","onPress","buttonText","signUpText"],"sources":["/home/annou231/Documents/Licence 3/github/react/applications-mobiles/react/Screen/SignInScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react'; \nimport { View, Text, TextInput, Button, StyleSheet, TouchableOpacity, ImageBackground } from 'react-native';\nimport { TokenContext, UsernameContext } from '../Context/Context'; \nimport { signIn } from '../js/sign'; \nimport { styles } from '../styles/styleSignIn'; \n\nexport default function SignInScreen({ navigation }) {\n  \n  const [, setUsername] = useContext(UsernameContext); // on a besoin que de lafonction de la mise a jour \n  const [, setToken] = useContext(TokenContext);\n\n  const [inputUsername, setInputUsername] = useState(''); //stocker le username saisi par le user \n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Fonction de gestion de la connexion\n  const handleSignIn = async () => {\n    try {\n      const token = await signIn(inputUsername, password); /**enoyer les donnees stockes a signIn\n                                                            elle renvoie un jeton */\n      setUsername(inputUsername); /**si la connextion reussi \n                                   mise a jour du contexte global */\n      setToken(token);\n      navigation.navigate('Home'); // Redirige vers l'ecran d'accueil apres connexion reussie\n      \n    } catch (error) {\n      setErrorMessage(error.message); // Affiche le message d'erreur en cas d'echec\n    }\n  };\n\n  return (\n    <ImageBackground \n      source={require('../assets/bleu.png')}\n      style={styles.backgroundImage}>\n        <View style={styles.container}>\n          <Text style={styles.title}>Sign In</Text>\n          <View style={styles.inputContainer}>\n              <TextInput\n                style={styles.input}\n                placeholder='Username'\n                value={inputUsername}\n                onChangeText={setInputUsername}\n              />\n              <TextInput\n                style={styles.input}\n                placeholder='Password'\n                value={password}\n                onChangeText={setPassword}\n                secureTextEntry\n              />\n           </View>\n          {errorMessage ? <Text style={styles.error}>{errorMessage}</Text> : null} {/* Affiche le message d'erreur s'il y en a */}\n          \n          <TouchableOpacity style={styles.signInButton} onPress={handleSignIn}>\n            <Text style={styles.buttonText}>Sign In</Text>\n          </TouchableOpacity>\n    \n          {/* Bouton pour aller à l'écran Sign Up */}\n          <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\n            <Text style={styles.signUpText}>\n              Don't have an account? Sign Up\n            </Text>\n          </TouchableOpacity>\n        </View>\n    </ImageBackground>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}