{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoItem(_ref) {\n  var todo = _ref.todo,\n    onToggle = _ref.onToggle,\n    onDelete = _ref.onDelete;\n  return _jsxs(View, {\n    style: styles.itemContainer,\n    children: [_jsxs(View, {\n      style: styles.todoContainer,\n      children: [_jsx(Switch, {\n        value: todo.done,\n        onValueChange: onToggle,\n        thumbColor: todo.done ? 'green' : 'gray'\n      }), _jsx(Text, {\n        style: [styles.todoText, todo.done && styles.todoTextDone],\n        children: todo.content\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: onDelete,\n      children: _jsx(Image, {\n        source: require(\"../assets/poubelle.png\"),\n        style: styles.icon\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'left',\n    justifyContent: 'space-between',\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    paddingHorizontal: 15,\n    width: '55%'\n  },\n  todoContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1\n  },\n  todoText: {\n    fontSize: 16,\n    flex: 1,\n    marginLeft: 10\n  },\n  todoTextDone: {\n    textDecorationLine: 'line-through',\n    color: 'black'\n  },\n  icon: {\n    width: 30,\n    height: 24,\n    tintColor: 'red'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","Switch","TouchableOpacity","Image","jsx","_jsx","jsxs","_jsxs","TodoItem","_ref","todo","onToggle","onDelete","style","styles","itemContainer","children","todoContainer","value","done","onValueChange","thumbColor","todoText","todoTextDone","content","onPress","source","require","icon","create","flexDirection","alignItems","justifyContent","paddingVertical","borderBottomWidth","borderBottomColor","paddingHorizontal","width","flex","fontSize","marginLeft","textDecorationLine","color","height","tintColor"],"sources":["/home/annou231/Documents/Licence 3/github/react/applications-mobiles/react/components/TodoItem.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Switch, TouchableOpacity, Image } from 'react-native'; // Assurez-vous d'importer Image\n\nexport default function TodoItem({ todo, onToggle, onDelete }) {\n  return (\n    <View style={styles.itemContainer}>\n      {/* Switch place Ã  gauche */}\n      <View style={styles.todoContainer}>\n        <Switch\n          value={todo.done}\n          onValueChange={onToggle} // Inverser l'etat `done`\n          thumbColor={todo.done ? 'green' : 'gray'}\n        />\n\n        <Text style={[styles.todoText, todo.done && styles.todoTextDone]}>\n          {todo.content}\n        </Text>\n      </View>\n\n      {/* Utilisation de votre image de poubelle */}\n      <TouchableOpacity onPress={onDelete}>\n        <Image\n          source={require('../assets/poubelle.png')} // Chemin de votre image\n          style={styles.icon} // Style pour l'image\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'left',\n    justifyContent: 'space-between',\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    paddingHorizontal: 15, \n    width:'55%'\n  },\n  todoContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  todoText: {\n    fontSize: 16,\n    flex: 1,\n    marginLeft: 10,  // Ajout d'un espace entre le switch et le texte\n  },\n  todoTextDone: {\n    textDecorationLine: 'line-through',\n    color: 'black',\n  },\n  icon: {\n    width: 30,   // Largeur de l'image poubelle\n    height: 24,  // Hauteur de l'image poubelle\n    tintColor: 'red', // Optionnel : applique une couleur si l'image est monochrome\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAA+B;EAAA,IAA5BC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EACzD,OACEL,KAAA,CAACT,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,aAAc;IAAAC,QAAA,GAEhCT,KAAA,CAACT,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACG,aAAc;MAAAD,QAAA,GAChCX,IAAA,CAACJ,MAAM;QACLiB,KAAK,EAAER,IAAI,CAACS,IAAK;QACjBC,aAAa,EAAET,QAAS;QACxBU,UAAU,EAAEX,IAAI,CAACS,IAAI,GAAG,OAAO,GAAG;MAAO,CAC1C,CAAC,EAEFd,IAAA,CAACN,IAAI;QAACc,KAAK,EAAE,CAACC,MAAM,CAACQ,QAAQ,EAAEZ,IAAI,CAACS,IAAI,IAAIL,MAAM,CAACS,YAAY,CAAE;QAAAP,QAAA,EAC9DN,IAAI,CAACc;MAAO,CACT,CAAC;IAAA,CACH,CAAC,EAGPnB,IAAA,CAACH,gBAAgB;MAACuB,OAAO,EAAEb,QAAS;MAAAI,QAAA,EAClCX,IAAA,CAACF,KAAK;QACJuB,MAAM,EAAEC,OAAO,yBAAyB,CAAE;QAC1Cd,KAAK,EAAEC,MAAM,CAACc;MAAK,CACpB;IAAC,CACc,CAAC;EAAA,CACf,CAAC;AAEX;AAEA,IAAMd,MAAM,GAAGd,UAAU,CAAC6B,MAAM,CAAC;EAC/Bd,aAAa,EAAE;IACbe,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,MAAM;IAClBC,cAAc,EAAE,eAAe;IAC/BC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,MAAM;IACzBC,iBAAiB,EAAE,EAAE;IACrBC,KAAK,EAAC;EACR,CAAC;EACDpB,aAAa,EAAE;IACba,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBO,IAAI,EAAE;EACR,CAAC;EACDhB,QAAQ,EAAE;IACRiB,QAAQ,EAAE,EAAE;IACZD,IAAI,EAAE,CAAC;IACPE,UAAU,EAAE;EACd,CAAC;EACDjB,YAAY,EAAE;IACZkB,kBAAkB,EAAE,cAAc;IAClCC,KAAK,EAAE;EACT,CAAC;EACDd,IAAI,EAAE;IACJS,KAAK,EAAE,EAAE;IACTM,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}